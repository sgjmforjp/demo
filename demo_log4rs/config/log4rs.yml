refresh_rate: 30 seconds

appenders:
  stdout:
    kind: console
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"

  common:
    kind: rolling_file
    path: "logs/common.log"
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"
    policy:
      trigger:
        kind: size
        limit: 500kb
      roller:
        kind: delete

  debug:
    kind: rolling_file
    path: "logs/debug/debug.log"
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"
    # filters: 
    #   - 
    #     kind: threshold
    #     level: debug
    policy:
      trigger:
        kind: size
        limit: 5kb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "logs/debug/debug{}.log"

  info:
    kind: rolling_file
    path: "logs/info/info.log"
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"
    # filters: 
    #   - 
    #     kind: threshold
    #     level: info
    policy:
      trigger:
        kind: size
        limit: 5kb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "logs/info/info{}.log"

  warn:
    kind: rolling_file
    path: "logs/warn/warn.log"
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"
    # filters: 
    #   - 
    #     kind: threshold
    #     level: warn
    policy:
      trigger:
        kind: size
        limit: 5kb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "logs/warn/warn{}.log"

  error:
    kind: rolling_file
    path: "logs/error/error.log"
    encoder:
      kind: json
      # kind: pattern
      # pattern: "{h({d(%Y-%m-%d %H:%M:%S)} - {l}: {m}{n})}"
    # filters: 
    #   -
    #     kind: threshold
    #     level: error
    policy:
      trigger:
        kind: size
        limit: 5kb
      roller:
        kind: fixed_window
        base: 1
        count: 5
        pattern: "logs/error/error{}.log"

root:
  level: debug
  appenders:
    - stdout
    - common
    # - debug
    # - info
    # - warn
    # - error

loggers:
  debug:
    level: debug
    appenders:
      - stdout
      - debug
    additive: false

  info:
    level: info
    appenders:
      - stdout
      - info
    additive: false

  warn:
    level: warn
    appenders:
      - stdout
      - warn
    additive: false

  error:
    level: error
    appenders:
      - stdout
      - error
    additive: false

